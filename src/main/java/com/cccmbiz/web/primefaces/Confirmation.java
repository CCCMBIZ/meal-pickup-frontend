package com.cccmbiz.web.primefaces;

import com.cccmbiz.web.Person;
import com.cccmbiz.web.PersonRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import ws.cccm.reg.service.NameTag;
import ws.cccm.reg.service.NameTagService;
import ws.cccm.reg.service.NameTagServiceImpl;

import javax.enterprise.context.SessionScoped;
import javax.faces.context.FacesContext;
import javax.inject.Named;
import javax.servlet.http.HttpServletResponse;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

@Named
@SessionScoped
public class Confirmation {


    private static final Logger logger = LoggerFactory.getLogger(Confirmation.class);

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PersonRepository personRepository;

    @Autowired
    private OnsiteR10n onsiteR10n ;


    public String printNametag(String rid) {

        logger.debug("Input parameter:" + rid);

        try {

            Set<NameTag> printRequest = new LinkedHashSet<>();
            
            List<Person> personList = personRepository.findByFamilyId(Integer.parseInt(rid));

            for (Person person : personList) {

                NameTag nameTag = new NameTag();
                nameTag.setConferenceName("二零一八基督徒大會");

                if (person.getChineseName() != null && !person.getChineseName().isEmpty()) {
                    nameTag.setChineseFullName(person.getChineseName());
                } else {
                    nameTag.setChineseFullName(person.getFirstName());
                }

                logger.info("Name:" + nameTag.getChineseFullName());
                nameTag.setEnglishFullName(person.getFirstName() + " " + person.getLastName());
                nameTag.setChruchName("");;
                nameTag.setCenterId(String.valueOf(person.getFamilyId()));

                String groupID = (person.getHealthCardNo() == null ? "" : person.getHealthCardNo());
                nameTag.setGroupId(groupID);
                nameTag.setBarcodeId(String.valueOf(person.getPersonId()));

                printRequest.add(nameTag);
            }

            NameTagService nameTagService = new NameTagServiceImpl();
            byte[] pdf = nameTagService.generateNameTagPrints(printRequest, 1);

            HttpServletResponse response
                    = (HttpServletResponse) FacesContext.getCurrentInstance()
                    .getExternalContext().getResponse();

            response.setContentType("application/octet-stream");
            response.setHeader("Content-Disposition", "attachment;filename=nametag-" + rid + ".pdf");
            response.getOutputStream().write(pdf);
            response.getOutputStream().flush();
            response.getOutputStream().close();
            FacesContext.getCurrentInstance().responseComplete();

        } catch (Exception exception) {
                logger.error(exception.getMessage());
                exception.printStackTrace();
        }
        
        return "success";

    }
}
